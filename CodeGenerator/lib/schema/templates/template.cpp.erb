#include <climits>
#include <cstdlib>
#include <cstring>
#include "<%= header_file_name %>"
#include "../../src/schema/conversion.h"

using namespace std;

namespace <%= schema.namespace %> {

void <%= class_name %>::add(string elements[<%= columns.count %>]) {
  add_instance(<%= columns.comma_with_index { |i,c| c.from_string_variable("elements[#{i}]") } %>);
}

void <%= class_name %>::add_instance(<%= columns.comma(&:local_definition) %>) {
  <%= columns.line(&:add_from_local) %>
  <%= indexes.line(&:assign_from_tid) %>
  tid++;
}

void <%= class_name %>::remove(uint64_t tid) {
  <%= indexes.block(&:remove) %>

  // We want to move the last item to the deleted item's position
  // We have one item less now, so decrease TID for next add_instance
  uint64_t tidToSwap = --this->tid;

  if (tid != tidToSwap) {
    // Move data from last item to deleted item's position
    <%= columns.line { |c| c.move_global('tid', 'tidToSwap') } %>

    // Set swapped item's TID in index
    <%= indexes.line(&:assign_from_tid) %>
  }

  // Delete the data
  <%= columns.line(&:remove) %>
}

<%= indexes.block(&:get_method) %>

}
