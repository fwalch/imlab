#ifndef <%= header_constant %>
#define <%= header_constant %>

#include <tuple>
#include <vector>
#include <cstdint>
#include <unordered_map>
#include <map>
#include "../../src/str_dictionary.h"
#include "schema.h"

namespace <%= schema.namespace %> {

class <%= class_name %> : public Store {
  public:
    <%= indexes.line(&:global_definition) %>
    <%= columns.line(&:global_definition) %>

    void add(std::string[<%= columns.count %>]);
    void add_instance(<%= columns.comma(&:local_definition) %>);
    void remove(uint64_t tid);

    <%= indexes.line(&:get_method_signature) %>
};

}

#endif
